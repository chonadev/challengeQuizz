{"version":3,"sources":["components/Login.js","components/Register.js","App.js","reportWebVitals.js","index.js","logo.svg"],"names":["Login","formik","useFormik","initialValues","email","password","validationSchema","Yup","required","max","onSubmit","values","alert","JSON","stringify","react_default","a","createElement","className","handleSubmit","alt","src","logo","width","height","htmlFor","id","name","type","onChange","handleChange","value","touched","errors","Register","firstName","App","Fragment","Login_Login","Register_Register","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App","module","exports","p"],"mappings":"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","file":"static/js/main.8ff7a713.chunk.js","sourcesContent":["import React from 'react';\nimport { ErrorMessage, useFormik } from 'formik';\nimport * as Yup from 'yup';\n\nimport logo from '../logo.svg';\n\nexport const Login = () => {\n\n  const formik = useFormik({\n    initialValues: {\n      email: '',\n      password: ''\n    },\n    validationSchema: Yup.object({\n      email : Yup.string().email('Invalid Email address').required('Required'),\n      password: Yup.string()\n      .max(15, 'Must be 15 characters or less')\n      .required('Required'),\n    }),\n    onSubmit: values => {\n      alert(JSON.stringify(values, null, 2));\n    },\n  });\n\n  return (\n    <main className=\"w-50 m-auto\">\n      <form onSubmit={formik.handleSubmit}>\n        <div className=\"text-center\">\n          <img alt='logo' className='mb-3' src={logo} width={72} height={72} />\n          <h1 className=\"h3 mb-3 fw-normal\"> Login </h1>\n        </div>\n\n        <div className=\"mb-3 form-group has-validation\">\n          <label htmlFor=\"email\" className=\"form-label\"> Email </label>\n          <input\n            id=\"email\"\n            className=\"form-control\"\n            name=\"email\"\n            type=\"email\"\n            onChange={formik.handleChange}\n            value={formik.values.email}\n          />\n          {formik.touched.email && formik.errors.email \n          ? (<div className=\"text-danger\">{formik.errors.email}</div>) \n          : null}\n        </div>\n\n        <div className=\"mb-3 form-group has-validation\">\n          <label htmlFor='password' className=\"form-label\"> Password </label>\n          <input\n            id=\"pass\"\n            className=\"form-control\"\n            name=\"password\"\n            type=\"password\"\n            onChange={formik.handleChange}\n            value={formik.values.password}\n          />\n          {formik.touched.password && formik.errors.password \n          ? (<div className=\"text-danger\">{formik.errors.password}</div>) \n          : null}\n        </div>\n        \n        <div className=\"mb-3 form-check\">\n          <input type=\"checkbox\" className=\"form-check-input\" id=\"remembercheck\" />\n          <label className=\"form-check-label\" htmlFor=\"remembercheck\"> Remember email </label>\n        </div>\n\n        <button type=\"submit\" className=\"btn btn-primary btn-lg\">Submit</button>\n\n      </form>\n    </main>\n  )\n}\n","import React from 'react';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\n\nimport logo from '../logo.svg';\n\nexport const Register = () => {\n\n  const formik = useFormik({\n    initialValues: {\n      firstName: '',\n      email: '',\n      password: ''\n    },\n    validationSchema: Yup.object({\n      firstName: Yup.string()\n        .max( 20, 'Must be 20 characters or less')\n        .required('Required'),\n      email : Yup.string()\n        .email('Invalid Email address')\n        .required('Required'),\n      password: Yup.string()\n        .max(15, 'Must be 15 characters or less')\n        .required('Required'),\n    }),\n    onSubmit: values => {\n      alert(JSON.stringify(values, null, 2));\n    },\n  });\n\n  return (\n    <main className=\"w-50 m-auto\">\n      <form onSubmit={formik.handleSubmit}>\n        <div className=\"text-center\">\n          <img alt='logo' className='mb-3' src={logo} width={72} height={72} />\n          <h1 className=\"h3 mb-3 fw-normal\"> Register </h1>\n        </div>\n\n        <div className=\"mb-3 form-group\">\n          <label htmlFor=\"firstName\" className=\"form-label\"> First Name </label>\n          <input\n            id=\"firstName_register\"\n            className='form-control'\n            name=\"firstName\"\n            type=\"text\"\n            onChange={formik.handleChange}\n            value={formik.values.firstName}\n          />\n          {formik.touched.firstName && formik.errors.firstName \n          ? (<div className=\"text-danger\">{formik.errors.firstName}</div>) \n          : null}\n        </div>\n\n        <div className=\"mb-3 form-group\">\n          <label htmlFor=\"email\" className=\"form-label\"> Email </label>\n          <input\n            id=\"email_register\"\n            className='form-control'\n            name=\"email\"\n            type=\"email\"\n            onChange={formik.handleChange}\n            value={formik.values.email}\n          />\n          {formik.touched.email && formik.errors.email \n          ? (<div className=\"text-danger\">{formik.errors.email}</div>) \n          : null}\n        </div>\n\n        <div className=\"mb-3 form-group\">\n          <label htmlFor='password' className=\"form-label\"> Password </label>\n          <input\n            id=\"pass_register\"\n            className=\"form-control\"\n            name=\"password\"\n            type=\"password\"\n            onChange={formik.handleChange}\n            value={formik.values.password}\n          />\n          {formik.touched.password && formik.errors.password \n          ? (<div className=\"text-danger\">{formik.errors.password}</div>) \n          : null}\n        </div>\n        \n        <button type=\"submit\" className=\"btn btn-primary btn-lg\"> Register </button>\n      </form>\n    </main>\n  )\n}\n","import React from 'react';\nimport { Login } from './components/Login';\nimport { Register } from './components/Register';\n\nfunction App() {\n  return (\n    <>\n      <Login />\n      <Register />\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","module.exports = __webpack_public_path__ + \"static/media/logo.06e73328.svg\";"],"sourceRoot":""}